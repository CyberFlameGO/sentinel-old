buildscript {
    ext.kotlin_version = '1.2.50'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    }
}

group 'com.fredboat'
version '0.1'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: "kotlin-spring"

sourceCompatibility = 9

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://dl.bintray.com/palantir/releases' }
}

ext {
    jdaVersion = "3.6.0_354"
    bootVersion = "2.0.0.RELEASE"
    amqpVersion = "2.0.3.RELEASE"
    gsonVersion = '2.8.2'
    jacksonKotlinVersion = "2.9.+"
    logbackVersion = "1.2.3"
    prometheusClientVersion = "0.3.0"

    //testing deps
    junitVersion                = '5.1.0'
    apiGuardianVersion          = '1.0.0'
    dockerComposeRuleVersion    = '0.33.0'
    mockitoVersion              = '2.+'
}

dependencies {
    compile project(":sentinel-shared")
    compile "net.dv8tion:JDA:$jdaVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.springframework.boot:spring-boot-starter-web:$bootVersion"
    compile "org.springframework.amqp:spring-rabbit:$amqpVersion"
    compile "com.google.code.gson:gson:$gsonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonKotlinVersion"
    compile "ch.qos.logback:logback-classic:$logbackVersion"

    compile group: 'io.prometheus', name: 'simpleclient', version: prometheusClientVersion
    compile group: 'io.prometheus', name: 'simpleclient_hotspot', version: prometheusClientVersion
    compile group: 'io.prometheus', name: 'simpleclient_logback', version: prometheusClientVersion
    compile group: 'io.prometheus', name: 'simpleclient_guava', version: prometheusClientVersion

    //tests
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
    // To avoid compiler warnings about @API annotations in JUnit code.
    testCompileOnly group: 'org.apiguardian', name: 'apiguardian-api', version: apiGuardianVersion
    //required for the docker compose rule https://github.com/palantir/docker-compose-rule/issues/224
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-migrationsupport', version: junitVersion
    //allows us to fire up docker containers to test with, for example our postgres database
    testCompile group: 'com.palantir.docker.compose', name: 'docker-compose-rule-junit4', version: dockerComposeRuleVersion
    testCompile group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
}
